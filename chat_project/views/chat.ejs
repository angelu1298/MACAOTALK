<!DOCTYPE html>
<html>

<head>
   <style>
   		* { margin:0; padding:0; border:none; }
		body{margin:0;padding:0; width:230px; overflow-x:hidden; overflow-y:hidden;background:white;height:380px;}
		#head{height:40px; 
		font-family:'Nanum Square','나눔스퀘어','Nanum Barun Gothic', NanumBarunGothic,'나눔바른고딕', 'Nanum Gothic', NanumGothic,'나눔고딕',Tahoma, Geneva, sans-serif,verdana;
		font-size:15px;font-weight:700;padding:10px; box-sizing:border-box;
		 padding-left:10px; background:rgba(190,35,25,1);color:white;position:fixed;top:0px;width:100%;
		 display:block;z-index:9999}
		#head > img { float:left; margin:0 2px;  line-height:20px; height:20px;}
		.messageBody{display:block;position:absolute; top:40px;width:100%; margin-bottom:10px;}
		#lobby{background:black; margin:0; width:230px; height:310px; display:block;overflow-x:hidden; overflow-y:auto;}
		#lobby > ul {padding:0; margin:0;width:210px;background:rgba(20,20,20,1);}
		li{list-style:none;color:white;clear:both;display:block;font-size:12px; paddding:10px; margin:5px 5px; letter-spacing:-0.1px; }
		p{display:inline-block}
		.me > p:nth-child(1){margin-left:3px;padding:5px;font-family:'Nanum Barun Gothic','나눔바른고딕', NanumGothic,'나눔고딕';background:#f0f0f0;color:#232323; word-break:break-all;width:70%;border-radius: 5px;  }
		.me > p:nth-child(2){line-height:10px;width:20%;margin-left:7px;}
		.other > p:nth-child(1){line-height:10px;width:20%;margin-right:3px;}
		.other > p:nth-child(2){margin:3px;padding:5px;background:#e6e6e6;font-family:'Nanum Barun Gothic','나눔바른고딕', NanumGothic,'나눔고딕';color:black;word-break:break-all;width:70%;border-radius: 5px;}
		#messagearea{position:fixed;bottom:0px;width:100%; height:30px; display:inline-block; }
		#message{ margin:0; padding:0 5px ; width:170px; height:30px;}
		#send{float:right; width:50px; height:30px; line-height:30px; background:url(images/sendbutton.png);border:none}
    </style>
</head>

<body>
<div id="head"><img src="./images/chatbox.png" /></div>
<div class="messageBody">
		<div id="lobby">
			<ul id="messageShow">
			</ul>
		</div>
</div>
<div id="messagearea">
		<input type="text" id="message" /><input type="button" id="send"  />
</div>
<script type="text/javascript" src="http://cdn.socket.io/socket.io-1.4.0.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>

<script>

	 
    var serverURL = 'localhost:50000';
	var getParameter = function (param) {

		var returnValue;
		var url = location.href;
		var parameters = (url.slice(url.indexOf('?') + 1, url.length)).split('&');
			for (var i = 0; i < parameters.length; i++) {
				var varName = parameters[i].split('=')[0];
					if (varName.toUpperCase() == param.toUpperCase()) {
						returnValue = parameters[i].split('=')[1];
						return decodeURIComponent(returnValue);
					}
				}
	};
    var name = ''
    if(getParameter("mem_id")!=undefined){
    	name = getParameter("mem_id");
    }
    var room = '100';

    var socket = null;
	
	
    
    function writeMessage(type, name, message) {
    	if(type=='system'){
	    	 var html = '<li>{MESSAGE}</li>';
	
	        html = html.replace('{MESSAGE}',message);
	
	        $(html).appendTo('#messageShow');
	        $('#lobby').stop();
	        $('#lobby').animate({scrollTop:$('#lobby ul').height()}, 500);
    	}else if(type=='me'){
    	
        var html = '<li class="me">{MESSAGE}</li>';

        html = html.replace('{MESSAGE}','<p>'+message+'</p>'+'<p>'+name+'</p>');

        $(html).appendTo('#messageShow');
       		$('#lobby').stop();
	        $('#lobby').animate({scrollTop:$('#lobby ul').height()}, 500);
        }
    	else{
    	
        var html = '<li class="other">{MESSAGE}</li>';

        html = html.replace('{MESSAGE}', '<p>'+name+'</p>' + '<p>'+message+'</p>');

        $(html).appendTo('#messageShow');
       	$('#lobby').stop();
	    $('#lobby').animate({scrollTop:$('#lobby ul').height()}, 500);
        }

    }

    function sender(text) {

        socket.emit('user', {
            name : name,
            message : text
        });

        writeMessage('me', name, text);
    }

    $(document).ready(function() {
    	
        socket = io.connect(serverURL);

        socket.on('connection', function(data) {
            console.log('connect');
            if(data.type === 'connected' && name!= '') {
                socket.emit('connection', {
                    type : 'join',
                    name : name,
                    room : room
                });
	 	  	 	$('#message').prop('disabled',false);
            }else{
	 	  	 	$('#message').val('로그인하세요');
	 	  	 	$('#message').prop('disabled',true);
	 	  	 }
        });

        socket.on('system', function(data) {
            writeMessage('system', 'system', data.message);
        });

        socket.on('message', function(data) {
            writeMessage('other', data.name, data.message);
        });
		
		
	    $('#send').click(function() {
		
			if(name!=''){
		       var $input = $('#message');
		
		       var msg = $input.val();
		       sender(msg);
		       $input.val('');
		       $input.focus();
	
		 	 }
	
	    });
	
	    $('#message').on('keypress', function(e) {
			if(name!=''){
		        if(e.keyCode === 13) {
	
		        var $input = $('#message');
		
		        var msg = $input.val();
		        sender(msg);
		        $input.val('');
		        $input.focus();
		        }
	        }
	    });
	    
	   
    });

</script>

</body>
</html>